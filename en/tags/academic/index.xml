<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic | My Site</title>
    <link>https://dsyakovleva.github.io/en/tags/academic/</link>
      <atom:link href="https://dsyakovleva.github.io/en/tags/academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sun, 09 Mar 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dsyakovleva.github.io/media/icon_hu_645fa481986063ef.png</url>
      <title>Academic</title>
      <link>https://dsyakovleva.github.io/en/tags/academic/</link>
    </image>
    
    <item>
      <title>Моя неделя</title>
      <link>https://dsyakovleva.github.io/en/post/01/</link>
      <pubDate>Sun, 09 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://dsyakovleva.github.io/en/post/01/</guid>
      <description>&lt;h2 id=&#34;моя-неделя-вдохновение-и-новые-открытия&#34;&gt;Моя неделя: вдохновение и новые открытия&lt;/h2&gt;
&lt;p&gt;На этой неделе я погрузилась в изучение новых тем по программированию.
Одним из самых интересных открытий стал курс по алгоритмам,
где мы разбирали задачи на графы. Это было непросто, но безумно
увлекательно!&lt;/p&gt;
&lt;p&gt;Также в университете у нас прошла лекция по системному программированию,
где я узнала, как работают операционные системы на низком уровне.
Теперь я точно понимаю, как важна эта база для разработки сложных
приложений.&lt;/p&gt;
&lt;p&gt;Среди личных достижений — я наконец-то разобралась в настройке
своего окружения для работы с Linux, что очень облегчило мою учебу.&lt;/p&gt;
&lt;p&gt;Неделя была насыщенной и мотивирующей, и я с нетерпением жду новых вызовов.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Непрерывная интеграция и непрерывное развертывание</title>
      <link>https://dsyakovleva.github.io/en/publication/01/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://dsyakovleva.github.io/en/publication/01/</guid>
      <description>&lt;h2 id=&#34;непрерывная-интеграция-и-непрерывное-развертывание-cicd&#34;&gt;Непрерывная интеграция и непрерывное развертывание (CI/CD)&lt;/h2&gt;
&lt;p&gt;Современная разработка программного обеспечения невозможно представить без практик, обеспечивающих высокую скорость разработки, надежность и качество продукта. Одной из таких практик является CI/CD (Continuous Integration/Continuous Deployment).&lt;/p&gt;
&lt;h3 id=&#34;что-такое-cicd&#34;&gt;Что такое CI/CD?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Непрерывная интеграция (CI)&lt;/strong&gt; — это процесс регулярного объединения кода разработчиков в общий репозиторий. Главная цель CI — быстро обнаруживать и исправлять ошибки на ранних стадиях разработки. Для этого используется автоматическое тестирование и сборка приложения.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Непрерывное развертывание (CD)&lt;/strong&gt; — это процесс автоматической доставки изменений в рабочую среду. Он гарантирует, что каждая новая версия продукта проходит этапы проверки и быстро доходит до конечного пользователя.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;преимущества-cicd&#34;&gt;Преимущества CI/CD&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Скорость разработки.&lt;/strong&gt; Благодаря автоматизации ручных процессов команды могут быстрее выпускать новые версии продукта.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Повышение качества кода.&lt;/strong&gt; CI позволяет разработчикам регулярно проверять свой код, сокращая вероятность появления критических ошибок.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Удобство тестирования.&lt;/strong&gt; Интеграция автоматических тестов помогает проверить функциональность приложения на каждом этапе разработки.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Стабильность развертывания.&lt;/strong&gt; CD минимизирует риски, связанные с человеческими ошибками при развертывании, благодаря четко настроенным автоматизированным процессам.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;как-это-работает&#34;&gt;Как это работает?&lt;/h3&gt;
&lt;p&gt;Цикл CI/CD можно разделить на несколько этапов:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Коммит изменений.&lt;/strong&gt; Разработчики отправляют изменения в систему контроля версий (например, Git).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Автоматическое тестирование.&lt;/strong&gt; Триггер CI запускает тесты, которые проверяют работоспособность нового кода.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Сборка.&lt;/strong&gt; После успешного прохождения тестов приложение собирается для дальнейшего использования.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Развертывание.&lt;/strong&gt; Система CD доставляет готовое приложение в тестовую или рабочую среду.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;почему-это-важно&#34;&gt;Почему это важно?&lt;/h3&gt;
&lt;p&gt;CI/CD помогает командам сократить время разработки и повысить качество продукта, минимизируя риски и увеличивая гибкость. В условиях современной конкуренции на рынке ПО внедрение CI/CD становится необходимостью для большинства IT-компаний.&lt;/p&gt;
&lt;h3 id=&#34;итог&#34;&gt;Итог&lt;/h3&gt;
&lt;p&gt;CI/CD — это не просто инструмент, а философия, которая помогает разработчикам сосредоточиться на создании ценности для пользователей. Благодаря этой практике разработка становится более организованной, прозрачной и предсказуемой.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
